package icaro.infraestructura.corba.recursos.itfUsoRecInformacionUsuarioIDL;


/**
* organizacion/infraestructura/corba/recursos/itfUsoRecInformacionUsuarioIDL/_ItfUsoRecInformacionUsuarioIDLStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from C:/Documents and Settings/damiano/Escritorio/workspace/OrganizacionCognitivo-CORBA/idls/ItfUsoRecInformacionUsuarioIDL.idl
* viernes 13 de junio de 2008 11H12' CEST
*/

public class _ItfUsoRecInformacionUsuarioIDLStub extends org.omg.CORBA.portable.ObjectImpl implements icaro.infraestructura.corba.recursos.itfUsoRecInformacionUsuarioIDL.ItfUsoRecInformacionUsuarioIDL
{

  public void guardarMensaje (String mensaje)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("guardarMensaje", true);
                $out.write_wstring (mensaje);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                guardarMensaje (mensaje        );
            } finally {
                _releaseReply ($in);
            }
  } // guardarMensaje

  public void anyadirAlternativaAlMensaje (String id, String alternativa)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("anyadirAlternativaAlMensaje", true);
                $out.write_string (id);
                $out.write_string (alternativa);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                anyadirAlternativaAlMensaje (id, alternativa        );
            } finally {
                _releaseReply ($in);
            }
  } // anyadirAlternativaAlMensaje

  public void eliminarMensaje (String id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("eliminarMensaje", true);
                $out.write_string (id);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                eliminarMensaje (id        );
            } finally {
                _releaseReply ($in);
            }
  } // eliminarMensaje

  public void eliminarAlternativaMensaje (String id, int alternativa)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("eliminarAlternativaMensaje", true);
                $out.write_string (id);
                $out.write_long (alternativa);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                eliminarAlternativaMensaje (id, alternativa        );
            } finally {
                _releaseReply ($in);
            }
  } // eliminarAlternativaMensaje

  public String obtenerMensaje (String idMensaje)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("obtenerMensaje", true);
                $out.write_string (idMensaje);
                $in = _invoke ($out);
                String $result = $in.read_wstring ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return obtenerMensaje (idMensaje        );
            } finally {
                _releaseReply ($in);
            }
  } // obtenerMensaje

  public String obtenerMensajeAlternativo (String idMensaje, int numAlternativa)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("obtenerMensajeAlternativo", true);
                $out.write_string (idMensaje);
                $out.write_long (numAlternativa);
                $in = _invoke ($out);
                String $result = $in.read_wstring ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return obtenerMensajeAlternativo (idMensaje, numAlternativa        );
            } finally {
                _releaseReply ($in);
            }
  } // obtenerMensajeAlternativo

  public String obtenerMensajeParametrizado (String idMensaje, String parametros)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("obtenerMensajeParametrizado", true);
                $out.write_string (idMensaje);
                $out.write_wstring (parametros);
                $in = _invoke ($out);
                String $result = $in.read_wstring ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return obtenerMensajeParametrizado (idMensaje, parametros        );
            } finally {
                _releaseReply ($in);
            }
  } // obtenerMensajeParametrizado

  public String obtenerMensajeAlternativoParametrizado (String idMensaje, String parametros, int numAlternativa)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("obtenerMensajeAlternativoParametrizado", true);
                $out.write_string (idMensaje);
                $out.write_wstring (parametros);
                $out.write_long (numAlternativa);
                $in = _invoke ($out);
                String $result = $in.read_wstring ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return obtenerMensajeAlternativoParametrizado (idMensaje, parametros, numAlternativa        );
            } finally {
                _releaseReply ($in);
            }
  } // obtenerMensajeAlternativoParametrizado

  public String obtenerTodosLosMensajes ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("obtenerTodosLosMensajes", true);
                $in = _invoke ($out);
                String $result = $in.read_wstring ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return obtenerTodosLosMensajes (        );
            } finally {
                _releaseReply ($in);
            }
  } // obtenerTodosLosMensajes

  public String dameTablaDatosMostrar ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("dameTablaDatosMostrar", true);
                $in = _invoke ($out);
                String $result = $in.read_wstring ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return dameTablaDatosMostrar (        );
            } finally {
                _releaseReply ($in);
            }
  } // dameTablaDatosMostrar

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:organizacion/infraestructura/corba/recursos/itfUsoRecInformacionUsuarioIDL/ItfUsoRecInformacionUsuarioIDL:1.0", 
    "IDL:organizacion/infraestructura/corba/patronRecursoSimple/itfUsoRecursoSimpleIDL/ItfUsoRecursoSimpleIDL:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _ItfUsoRecInformacionUsuarioIDLStub
